=======================
Find Multiple Documents
=======================

.. default-domain:: mongodb

Overview
--------

You can
:doc:`query </crud/query-document>`
for multiple documents in a collection with ``collection.find()``.
The ``find()`` method uses a query document that you provide to match
only the subset of the documents in the collection that match the query.
If you don't provide a query document (or if you provide an empty document),
MongoDB returns all documents in the collection.


You can also define additional query options such as
:doc:`sort </crud/read-operations/sort>`
and
:doc:`projection </crud/read-operations/project>`
to configure the result set. You should specify these options using the
cursor methods
:node-docs:`sort() <api/Cursor.html#sort>`
and
:node-docs:`project() <api/Cursor.html#project>`.
For detailed reference documentation, see
:node-docs:`collection.find() <api/Collection.html#find>`.

``find()`` returns a
:node-docs:`Cursor <api/Cursor.html>`
that provides the results of your query. Iterate through the
:doc:`cursor </crud/read-operations/cursor>` using cursor methods like
``next()``, ``toArray()``, or ``forEach()`` to
fetch and work with the returned documents. If no documents match the
query, ``find()`` returns an empty cursor.

Example
-------

The following snippet finds documents from the ``movies``
collection. It uses the following:

- A **query document** that configures the query to return only
  movies with a runtime of less than 15 minutes.

- A **sort** that organizes returned documents in ascending order by
  title (A->Z)

- A **projection** that explicitly excludes the ``_id`` field from
  returned documents and explicitly includes only the ``title`` and
  ``imdb`` object (and its embedded fields).

.. literalinclude:: /code-snippets/usage-examples/find.js
  :language: javascript
  :emphasize-lines: 18
  :linenos:

===================================
Retrieve Distinct Values of a Field
===================================

.. default-domain:: mongodb

You can retrieve a list of distinct values for a field across a
collection by using the :node-api:`distinct()
<Collection.html#distinct>` method. Call the ``distinct()`` method
on a Collection object with a document field name parameter as a String
to produce a list that contains one of each of the different values
found in the specified document field.

You can specify a document field within an *embedded document* using
:manual:`dot
notation </core/document/#embedded-documents>`. If
you call ``distinct()`` on an document field that contains an array,
each element of the array is treated as a separate value.

You can provide an optional query document to narrow the set of
documents that are searched and an optional Object to specify additional
query parameters. For details on the optional parameters, see the
:node-docs:`distinct() method in the API documentation
<api/Collection.html#distinct>`.

The ``distinct()`` method returns a
:mdn:`Promise <Web/JavaScript/Reference/Global_Objects/Promise>` that
resolves to an :mdn:`Array
<Web/JavaScript/Reference/Global_Objects/Array>` that contains each of
the different values. If none of the documents in the collection contain
the field specified in the method call, it returns an empty Array.

If you specify a value for the document field name that is not of type
String such as a Document, Array, Number, or ``null``, the method does
not execute and returns a TypeMismatch error with a message that
resembles the following:

::

   "key" had the wrong type. Expected string, found <non-string type>

Example
-------

The following snippet retrieves a list of distinct values for the ``year``
document field from the ``movies`` collection. It uses a query document to
match only movies that include "Barbara Streisand" as a ``director``.

.. literalinclude:: /code-snippets/usage-examples/distinct.js
  :language: javascript
  :linenos:

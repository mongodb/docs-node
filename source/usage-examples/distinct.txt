===================================
Retrieve Distinct Values of a Field
===================================

.. default-domain:: mongodb

.. note::
   If you specify a callback method, ``distinct()`` returns nothing. If you do
   not specify one, this method returns a ``Promise`` that resolves to the
   result object when it completes. See our guide on :doc:`Promises and
   Callbacks </fundamentals/promises>` for more information, or the
   :node-api-3.6:`API documentation <Collection.html#~resultCallback>` for
   information on the result object.

You can retrieve a list of distinct values for a field across a
collection by using the :node-api-3.6:`collection.distinct()
<Collection.html#distinct>` method. Call the ``distinct()`` method
on a ``Collection`` object with a document field name parameter as a
``String`` to produce a list that contains one of each of the different
values found in the specified document field as shown below:

.. code-block:: javascript

   const distinctValues = collection.distinct("countries", query);

You can specify a document field within an *embedded document* using
:manual:`dot notation </core/document/#embedded-documents>`. If you call
``distinct()`` on an document field that contains an array, the method
treats each element as a separate value. See the following example of
a method call to the ``wins`` field in the ``awards`` subdocument:

.. code-block:: javascript

   const distinctValues = collection.distinct("awards.wins", query);

You can specify additional query options using the ``options`` object passed
as the third parameter to the ``distinct()`` method. For details on the
query parameters, see the :node-api-3.6:`distinct() method in the API
documentation <Collection.html#distinct>`.

If you specify a value for the document field name that is not of type
``String`` such as a ``Document``, ``Array``, ``Number``, or ``null``,
the method does not execute and returns a ``TypeMismatch`` error with a
message that resembles the following:

.. blockquote::

   "key" had the wrong type. Expected string, found <non-string type>

Example
-------

The following snippet retrieves a list of distinct values for the ``year``
document field from the ``movies`` collection. It uses a query document to
match movies that include "Barbara Streisand" as a ``director``.

.. include:: /includes/connect-guide-note.rst

.. literalinclude:: /code-snippets/usage-examples/distinct.js
  :language: javascript
  :linenos:

=================
Insert a Document
=================

.. default-domain:: mongodb

.. note::
   If you specify a callback method, ``insertOne()`` returns nothing. If you
   do not specify one, this method returns a ``Promise`` that resolves to the
   result object when it completes. See our guide on :doc:`Promises and
   Callbacks </fundamentals/promises>` for more information, or the
   `API documentation <{+api+}/classes/Collection.html#insertOne>`__ for
   information on the result object.

You can insert a document into a collection using the
`collection.insertOne() <{+api+}/classes/Collection.html#insertOne>`__ method. To
insert a document, define an object that contains the fields and values that
you want to store. If the specified collection does not exist, the
``insertOne()`` method creates the collection.

You can specify additional query options using the ``options`` parameter.
For more information on the method parameters, see the
`insertOne() API documentation <{+api+}/classes/Collection.html#insertOne>`__. You
can also pass a callback method as an optional third parameter.
For more information on this method, see the
`insertOne() API documentation <{+api+}/classes/Collection.html#insertOne>`__.

If the operation successfully inserts a document, it appends an
``insertedId`` field to the object passed in the method call, and sets the
value of the field to the ``_id`` of the inserted document.

Example
-------

.. include:: /includes/connect-guide-note.rst

.. tabs::

   .. tab:: JavaScript
      :tabid: javascript

      .. literalinclude:: /code-snippets/usage-examples/insertOne.js
         :language: javascript
         :linenos:

   .. tab:: TypeScript
      :tabid: typescript

      .. literalinclude:: /code-snippets/usage-examples/insertOne.ts
         :language: typescript
         :linenos:

If you run the preceding example, you should see the following output:

.. code-block:: none
   :copyable: false

   A document was inserted with the _id: <your _id value>

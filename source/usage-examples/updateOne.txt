=================
Update a Document
=================

.. default-domain:: mongodb

You can update a single document using the :node-api:`updateOne()
<Collection.html#updateOne>`
method. ``updateOne()`` accepts a filter document, and updates the first
document that matches the filter using a provided update document. The
update document requires an :manual:`Update Operator
</reference/operator/update/#update-operators>` to modify a field in a
document.

Create an :mdn:`Object
<Web/JavaScript/Reference/Global_Objects/Object>` to specify additional
options. Set the ``upsert`` option to ``true`` to create a new document
if no documents match the filter.

The ``updateOne()`` method returns a :mdn:`Promise
<Web/JavaScript/Reference/Global_Objects/Promise>`
that resolves to an object. The ``modifiedCount`` field of this object
has a value of ``0`` if no documents were updated, and a value of ``1``
if a document was updated.

Specifying incorrect parameters for your ``updateOne()`` operation can
cause problems. Attempting to modify the immutable field ``_id`` will
result in an error. Additionally, trying to update a field to value that
would violate unique index rules will throw a ``duplicate key error``.

.. note::

  If your application requires the document after updating,
  consider using the :node-docs:`collection.findOneAndUpdate()
  <api/Collection.html#findOneAndUpdate>`. method, which has a similar
  interface to ``updateOne()`` but also returns the original or updated
  document.

Example
-------

.. literalinclude:: /code-snippets/usage-examples/updateOne.js
  :language: javascript
  :linenos:


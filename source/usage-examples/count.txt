===============
Count Documents
===============

.. default-domain:: mongodb

The Node.js driver provides two methods for counting
documents in a collection:

- :node-api:`collection.countDocuments()
  <Collection.html#countDocuments>` returns the number of documents in
  the collection that match the specified query. If you specify a empty
  query document, ``countDocuments()`` returns the total number of
  documents in the collection.

- :node-api:`collection.estimatedDocumentCount
  <Collection.html#estimatedDocumentCount>` returns an
  **estimation** of the number of documents in the collection based on
  collection metadata.

``estimatedDocumentCount()`` is faster than ``countDocuments()`` because
the estimation uses the collection's metadata rather than scanning the
collection. In contrast, ``countDocuments()`` takes longer to return, but
provides an **accurate** count of the number of documents and supports
specifying a filter. Choose the appropriate method for your workload.

To specify which documents you wish to count, ``countDocuments()``
accepts a :doc:`query </fundamentals/crud/query-document>` parameter.
``countDocuments()`` counts the documents that match the specified query.

``countDocuments()`` and ``estimatedDocumentCount()`` support optional
settings that affect the method's execution. Refer to the reference
documentation for each method for more information.

Depending on whether you specify a callback method, ``countDocuments()``
and ``estimatedDocumentCount()`` behave in two different ways:

- If you do not specify a callback method, ``countDocuments()`` and
  ``estimatedDocumentCount()`` return a Promise that resolves to a
  number.

- If you do specify a callback, ``countDocuments()`` and
  ``estimatedDocumentCount`` return a :node-api:`countCallback
  <Collection.html#~countCallback>` object.

Example
-------

The following example estimates the number of documents in the
``movies`` collection in the ``sample_mflix`` database, and then returns
an accurate count of the number of documents in the ``movies``
collection with ``Canada`` in the ``countries`` field.

.. include:: /includes/connect-guide-note.rst

.. literalinclude:: /code-snippets/usage-examples/count.js
  :language: javascript

===================
MongoDB Node Driver
===================

.. meta:: 
   :keywords: node.js

.. _node-driver-landing:

.. toctree::
  :titlesonly:
  :maxdepth: 1

  /quick-start
  /quick-reference
  /whats-new
  /usage-examples
  /fundamentals
  API Documentation <{+api+}>
  /faq
  /connection-troubleshooting
  /issues-and-help
  /compatibility
  /upgrade
  Release Notes <https://github.com/mongodb/node-mongodb-native/releases/>
  View the Source <https://github.com/mongodb/node-mongodb-native/>

Introduction
------------

Welcome to the documentation site for the official {+driver-long+}.
You can add the driver to your application to work with MongoDB
in JavaScript or TypeScript. For more information about downloading and
installing the {+driver-short+}, see
:ref:`Download and Install <node-quick-start-download-and-install>` in the
Quick Start guide.

You can connect using the {+driver-short+} for
deployments hosted in the following environments:

.. include:: /includes/fact-environments.rst

Quick Start
-----------

Learn how to establish a connection to MongoDB Atlas and begin
working with data in the step-by-step :doc:`Quick Start </quick-start>`.

Quick Reference
---------------

See driver syntax examples for common MongoDB commands in the
:ref:`Quick Reference <node-quick-reference>` section.

What's New
----------

For a list of new features and changes in each version, see the
:ref:`What's New <node-whats-new>` section.

Usage Examples
--------------

For fully runnable code snippets and explanations for common
methods, see the :doc:`Usage Examples </usage-examples>` section.

Fundamentals
------------

.. include:: /includes/fundamentals-sections.rst

API
---

For detailed information about classes and methods in the MongoDB
Node.js driver, see the `{+driver-long+} API documentation
<{+api+}>`__.

FAQ
---

For answers to commonly asked questions about the MongoDB
Node.js Driver, see the :doc:`Frequently Asked Questions (FAQ) </faq>`
section.

Connection Troubleshooting
--------------------------

For solutions to issues you might encounter when using the driver to connect to
a MongoDB deployment, see the :ref:`node-connection-troubleshooting` section.

Issues & Help
-------------

Learn how to report bugs, contribute to the driver, and to find help in the
:doc:`Issues & Help </issues-and-help>` section.

Compatibility
-------------

For the compatibility tables that show the recommended {+driver-short+}
version for each MongoDB Server version, see the
:doc:`Compatibility </compatibility>` section.

Upgrade Driver Versions
-----------------------

Learn what changes you may need to make to your application to upgrade
driver versions in the :ref:`<node-upgrade-driver>` section.

Related Tools and Libraries
---------------------------

Object Document Mappers
~~~~~~~~~~~~~~~~~~~~~~~

MongoDB and our partners provide several object-document mappers (ODMs) for Node.js that
let developers work with MongoDB data as objects. One popular ODM is **Mongoose**,
which helps enforce a semi-rigid schema at the application level and provides features
to assist with data modeling and manipulation. **Prisma**, another ODM, helps
ensure data consistency by offering a type-safe database client and an intuitive schema. 

For more information about using ODMs with MongoDB, see the following resources:

- :website:`MongoDB ORMs, ODMs, and Libraries </developer/products/mongodb/mongodb-orms-odms-libraries/>`
- `Mongoose <https://mongoosejs.com/docs/guide.html>`__ official documentation
- `Prisma <https://www.prisma.io/docs>`__ official documentation

Packages
~~~~~~~~

You can install the following packages to expand the functionality of the {+driver-short+}:

.. list-table::
   :header-rows: 1
   :stub-columns: 1
   :widths: 1 2

   * - Package
     - Description

   * - | `bson <https://www.npmjs.com/package/bson>`__
     - | BSON serialization and deserialization library used by the official
         {+driver-long+}

   * - `kerberos <https://www.npmjs.com/package/kerberos>`__
     - C++ extension for Node.js that provides support for Kerberos authentication

   * - | `mongodb-client-encryption <https://www.npmjs.com/package/mongodb-client-encryption>`__
     - | Library for client-side encryption functionality

   * - `mongodb-legacy <https://www.npmjs.com/package/mongodb-legacy>`__
     - Legacy Node.js driver with optional callback support

   * - | `@mongodb-js/zstd <https://www.npmjs.com/package/@mongodb-js/zstd>`__
     - | Zstandard compression library for Node.js

For information about each package's version compatibility, see the :github:`Component Support Matrix
</mongodb/node-mongodb-native#component-support-matrix>` in the {+driver-short+} Github
repository.

Learn
-----

Visit the Developer Hub and MongoDB University to learn more about the
{+driver-short+}.

Developer Hub
~~~~~~~~~~~~~

The Developer Hub provides tutorials and social engagement for developers.

To learn how to use MongoDB features with the Node.js driver, see the
`How To's and Articles page <https://www.mongodb.com/developer/search/?s=Node.js>`__.

To ask questions and engage in discussions with fellow developers using
the {+driver-short+}, see the `Developer Community forums <https://www.mongodb.com/community/forums/tag/node-js>`__.

MongoDB University
~~~~~~~~~~~~~~~~~~

MongoDB University provides free courses to teach everyone how to use MongoDB.

Take the following free online courses taught by MongoDB instructors:
`````````````````````````````````````````````````````````````````````

.. list-table::

   * - .. figure:: /includes/figures/Node_Catalog.png
          :alt: MongoDB University Node.js Course graphic
     
     - `Using MongoDB with Node.js <https://learn.mongodb.com/learning-paths/using-mongodb-with-nodejs>`_
        
       Learn the essentials of Node.js application development with MongoDB.

   * - .. figure:: /includes/figures/Node_LP_Catalog.png
          :alt: MongoDB University Node.js Learning Path graphic
     
     - `MongoDB Node.js Developer Path <https://learn.mongodb.com/learning-paths/mongodb-nodejs-developer-path>`_
        
       Learn how to build a Node.js application using MongoDB as your database.

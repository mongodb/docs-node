======================================
Insert or Update in a Single Operation
======================================

.. default-domain:: mongodb

Many applications require the ability to insert new documents into a
collection as well as the ability to update a document already within
that collection. However, certain workflows benefit from the ability to
complete *either* of these operations depending on whether or not a
matching document already exists in the collection. This can simplify
application logic and remove the need for initialization logic for
certain kinds of document.

Consider a messaging application that keeps track of users using phone
numbers as a unique identifier. When a new user signs up for an account,
it is possible that an older account was already created by a user who
had that phone number in the past, since phone numbers are often reused.
If the application relied solely upon an insert for creating a new
account, the insert would fail, since that phone number was already in
the collection. But if that same application used an upsert, the insert
could succeed.

While some workflows only require the ability to insert or update
documents as discrete operations, many applications benefit from the
ability to either update a document if a matching document is found or
insert a new document if no matching document is found. For this reason,
the ``upsert`` option exists for the :doc:`updateOne()
</usage-examples/updateOne>`, :doc:`replaceOne()
</usage-examples/replaceOne>`, and :doc:`updateMany()
</usage-examples/updateMany>` methods. Set this option to ``true`` in
the ``options`` object passed to either method to insert a document if
no matching document is found. If a matching document is not found for
the ``updateOne()`` or ``updateMany()`` methods, literal values in the
query document are used to instantiate a new document and the update
document is subsequently used to alter that document.

.. code-block:: javascript

   // define an empty query document
   const query = {"address":"1780 State Route 860"};
   const update = {"address":"42 Avenue B"};
   const options = {
      upsert: true
   }
   collection.updateOne(query, update, options)

.. _node-pkfactory:

=================================
Generate Custom Vales for ``_id``
=================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to use the MongoDB Node.js driver to generate your
own ``_id`` values using the primary key factory.

The primary key factory allows you to create unique identifiers in your
documents when you choose not to specify an ``_id`` during an
:ref:`insert operation <node-fundamentals-insert-data>`. The 
default primary key factory generates ``ObjectId`` values.

.. note:: Upsert Operations

   The driver doesn't use any primary key factory for
   :ref:`upsert operations <node-fundamentals-upsert>`. Instead, the
   driver always creates ``ObjectId`` values for the ``_id`` field of
   the upserted documents.

   If you want to use the primary key factory, peform a :ref:`find
   operation <node-fundamentals-retrieve-data>`, then an :ref:`update
   <node-fundamentals-change-a-document>` or :ref:`insert
   <node-fundamentals-insert-data>` operation.

Specify a Primay Key Factory
----------------------------

To specify a primary key factory, apply a ``pkFactory`` option to your
``MongoClient`` instance.

.. note:: TypeScript Data Consistency

   If you do not specify a primary key factory to generate
   ``_id`` values of your desired type, you may experience data
   inconsistency.
   
   This may happen because the driver's default primary key factory
   generates ``_id`` values of type ``ObjectId`` regardless of type
   parameter you specify. 

The following code snippet indicates the ``pkFactory`` option to
generate ``_id`` values of type ``uuid``:

.. code-block:: javascript

   const { UUID } = require('bson');
   ...
   const client = new MongoClient(uri, { 
     useUnifiedTopology: true, 
     pkFactory: { createPk: () =>  new UUID().toBinary() }
   });


Additional Information
----------------------

To learn more about the types, interfaces, and classes discussed in this
section, see the following resources:

- `pkFactory <{+api+}/interfaces/PkFactory.html>`__
- :manual:`The _id Field </core/document/#the-_id-field>`
- :ref:`node-fundamentals-upsert`
- :ref:`node-fundamentals-retrieve-data`
- :ref:`node-fundamentals-change-a-document`
- :ref:`node-fundamentals-insert-data`

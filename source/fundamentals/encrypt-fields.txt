==============
Encrypt Fields
==============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. default-domain:: mongodb

Overview
--------

You can encrypt fields in a document using a set of features called
**in-use encryption**.

In-use encryption enables your client applications to encrypt data
*before* sending it to MongoDB, and to query documents with encrypted fields.

Because the driver encrypts the data before sending it to MongoDB, only
your configured client applications can decrypt the data. Only applications
using the driver with access to your encryption keys can access the decrypted,
plaintext data. Should you have unauthorized access to your database, an
attacker could only see the encrypted, ciphertext data.

In-use encryption can help prevent exposure of the following sensitive types of data:

- Credit card numbers
- Addresses
- Health information
- Financial information
- Any other sensitive or personally identifiable information (PII)

MongoDB offers the following ways to encrypt fields:

{+qe+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

{+qe+} is the next-generation in-use encryption feature,
introduced in MongoDB 6.0 and available as a public preview. {+qe+}
supports searching encrypted fields for equality and encrypts each value
uniquely.

The MongoDB manual contains detailed information on the following {+qe+} topics:

- Begin a working {+qe+} example with the :v6.0:`queryable-encryption quick start </core/queryable-encryption/quick-start>`.
- Learn how to use {+qe+} in the :v6.0:`queryable-encryption fundamentals </core/queryable-encryption/fundamentals>`.
- Learn how to integrate your {+qe+} implementation with a KMS in the :v6.0:`queryable-encryption tutorials </core/queryable-encryption/tutorials>`.
- Learn {+qe+} concepts in the :v6.0:`queryable-encryption reference </core/queryable-encryption/reference>`.

{+csfle-long+}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

{+csfle-long+} was introduced in MongoDB v4.2 and supports searching encrypted
fields for equality. {+csfle-short+} differs from {+qe+} in that it requires
that the encrypted fields you want to search must be determinstically encrypted.
When you deterministically encrypt a value, the same input value produces
the same output value. While deterministic encryption provides greater
support for read operations, encrypted data with low :wikipedia:`cardinality <Cardinality>`
is susceptible to recovery using :wikipedia:`frequency analysis <Frequency_analysis>`.

The MongoDB manual contains detailed information on the following {+csfle-short+} topics:

- Begin a working {+csfle-short+} example with the :v6.0:`{+csfle-short+} quick start </core/csfle/quick-start>`.
- Learn how to use {+csfle-short+} in the :v6.0:`{+csfle-short+} fundamentals </core/csfle/fundamentals>`.
- Learn how to integrate your {+csfle-short+} implementation with a KMS in the :v6.0:`{+csfle-short+} tutorials </core/csfle/tutorials>`.
- Learn {+csfle-short+} concepts in the :v6.0:`{+csfle-short+} reference </core/csfle/reference>`.

